"""
Этот модуль содержит сериализаторы для моделей Product, Category и Brand.

Он используется для преобразования данных моделей в формат, подходящий для 
REST API, а также для преобразования полученных данных обратно в модели. 
"""

import re
from rest_framework import serializers
from .models import Product, Category, Brand


class ProductSerializer(serializers.ModelSerializer):
    """
    Сериализатор для модели Product.

    Предоставляет возможность сериализации и десериализации данных модели
    Product в формате JSON.
    """

    class Meta:
        """
        Метаданные для сериализатора.

        model:  Указывает, к какой модели применяется сериализатор.
        fields:  Указывает, какие поля модели должны быть сериализованы.
                'all' - включает все поля модели.
        """

        model = Product
        fields = "__all__"

    def validate_price(self, value):
        """
        Проверяет, что цена не меньше нуля.
        """
        if value < 0:
            raise serializers.ValidationError("Цена не может быть меньше нуля.")
        return value


class CategorySerializer(serializers.ModelSerializer):
    """
    Сериализатор для модели Category.

    Предоставляет возможность сериализации и десериализации данных модели
    Category в формате JSON.
    """

    class Meta:
        """
        Метаданные для сериализатора.

        model:  Указывает, к какой модели применяется сериализатор.
        fields:  Указывает, какие поля модели должны быть сериализованы.
                'all' - включает все поля модели.
        """

        model = Category
        fields = "__all__"

    def validate(self, attrs):
        """
        Проверяет, что название категории написано только на кириллице.
        """
        name = attrs.get("name")
        if not re.match(r"^[а-яА-Я\s]+$", name):
            raise serializers.ValidationError(
                "Название категории может быть написано только на кириллице."
            )
        return attrs


class BrandSerializer(serializers.ModelSerializer):
    """
    Сериализатор для модели Brand.

    Предоставляет возможность сериализации и десериализации данных модели
    Brand в формате JSON.
    """

    class Meta:
        """
        Метаданные для сериализатора.

        model:  Указывает, к какой модели применяется сериализатор.
        fields:  Указывает, какие поля модели должны быть сериализованы.
                'all' - включает все поля модели.
        """

        model = Brand
        fields = "__all__"

    def validate(self, attrs):
        """
        Проверяет, что название бренда написано только на латинице.
        """
        name = attrs.get("name")
        if not re.match(r"^[a-zA-Z\s]+$", name):
            raise serializers.ValidationError(
                "Название бренда может быть написано только на латинице."
            )
        return attrs


# * re.match: Это функция из модуля re (регулярные выражения) в Python. Она проверяет, совпадает ли
# регулярное выражение с началом строки.
# * r'^[а-яА-Я\s]+$': Это само регулярное выражение:
# * r'^':  Символ ^ означает "начало строки".
# * [а-яА-Я\s]:  Это набор символов, которые допускаются.
# * [а-я]  -  все строчные буквы кириллицы.
# * [А-Я]  -  все заглавные буквы кириллицы.
# * \s  -  пробел (пробельный символ).
# * +:  Означает, что предыдущий набор символов должен повторяться один или несколько раз.
# * $:  Означает "конец строки".
